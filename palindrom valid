class Solution {
public:
    bool isPalindrome(string s) {
        string s1 = "";
        bool check = 0;


        for(auto chr : s){
            if(isalnum(chr)){
                s1.push_back(tolower(chr));
            }
        }

        string rev = s1;

        reverse(rev.begin(),rev.end());

        if(s1 == rev) check = 1;

        return check;
    }
};

//Two Pointer Approch
class Solution {
public:
    bool isPalindrome(string s) {
        int start = 0;
        int end = s.length()-1;
        int check = 1;

        while(start<end)
        {
            if(!isalnum(s[start])){
                start++;
                continue;
            }

            if(!isalnum(s[end])){
                end--;
                continue;
            }

            if(tolower(s[start]) != tolower(s[end]))
            {
                check = 0;
                break;
            }
            else{
                start++;
                end--;
            }
        }

        return check;
    }
};
